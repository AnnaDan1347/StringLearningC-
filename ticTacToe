#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <windows.h>

using namespace std;

#define CHAR_X 'X'
#define CHAR_0 '0'
#define CHAR_EPMTY ' '
#define NUM_SQUARES 9
#define TIE 'T'
#define NOONE 'N'

void instructions ();
int askNumber(int high, int low = 0);
char humanPiece();
char opponent(char piece);
void showBoard (char board[]);
char winner(char board[]);
int humanMove(char board[], char human);
int computerMove(char board[], char human);
void announceWinner(char winner, char computer, char human);
bool isLegal(int move, char board[]);
int countChar (char board[], char c);

int main() {
	int move = 0;
	
	char board[NUM_SQUARES] = {0};
	
	for (int i = 0; i < NUM_SQUARES; i++ ){
	board[i] = ' ';
	}
	
	instructions ();
	
	char human = humanPiece();
	char computer = opponent(human);
	char turn = 'X';
	
	showBoard (board);
	
	while (winner(board) == NOONE){
		if (turn == human){
			move = humanMove(board, human);
			board[move] = human;
		}
		else {
			move = computerMove(board, computer);
			board[move] = computer;
		}
		showBoard (board);
		turn = opponent(turn);
	}
	announceWinner(winner(board), computer, human);
	return 0;
}

void instructions (){
	cout << " 0 | 1 | 2 |" << endl;
	cout << " 3 | 4 | 5 |" << endl;
	cout << " 6 | 7 | 8 |" << endl;
}

void showBoard (char board[]){
	cout << board[0] << " | " << board[1] << " | " << board[2] << " | " << endl;
	cout << board[3] << " | " << board[4] << " | " << board[5] << " | " << endl;
	cout << board[6] << " | " << board[7] << " | " << board[8] << " | " << endl;
}

int inputNumber(int high, int low = 0){
	int number = 0;
	do {
		cout << "The number is:" << endl;
		cin >> number;
	} while (number > high || number < low);
	return number;
}

char humanPiece(){
	char answer;
	cout << "Do you require the first move? Enter: y/n "<< endl;
	cin >> answer;
	if (answer == 'y') 
		return CHAR_X;
	else
		return CHAR_0;
}


char opponent(char piece){
	if (piece == 'X') 
		return '0';
	else 
		return 'X';
}

int humanMove(char board[], char human){
	cout << "Your turn! Number:" <<endl;
	int move;
	cin >> move;
	while (!isLegal(move, board)){
		cout << "That square is already occupied! Try again" << endl;
		cin >> move;
	}
	system ("cls");
	return move;
}

int computerMove(char board[], char computer){
	unsigned int move = 0;
	bool found = false;
	while (!found && move < NUM_SQUARES){
		if (isLegal(move, board)){
			board[move] = computer;
			found = winner(board) == computer;
			board[move] = CHAR_EPMTY;
		}
		if (!found) {
			++move;
		}
	}
	if (!found){
		move = 0;
		char human = opponent(computer);
		while (!found && move < NUM_SQUARES){
			if (isLegal(move, board)) {
				board[move] = human;
				found = winner(board) == human;
				board[move] = CHAR_EPMTY;
			}
			if (!found){
				++move;
			}
		}	
	}
	if (!found) {
		move = 0;
		unsigned int i = 0;
		const int bestMoves[] = {4, 0, 2, 6, 8, 1, 3, 5, 7};
		while (!found && i < NUM_SQUARES){
			move = bestMoves[i];
			if (isLegal(move, board)) {
				found = true;
			}
			i++;
		}
	}
	system ("cls");
	cout << "I shall take square number:" << move << endl;
	return move;
}

char winner(char board[]){
	int numOfWinningRows = 8;
	int winningRows[numOfWinningRows][3] = {
		{0, 1, 2},
		{3, 4, 5},
		{6, 7, 8},
		{0, 4, 8},
		{2, 4, 6},
		{0, 3, 6},
		{1, 4, 7},
		{2, 5, 8}
	};
	for (int row = 0; row < numOfWinningRows; ++row) {
		if ((board[winningRows[row][0]] != CHAR_EPMTY) &&
		(board[winningRows[row][0]] == board[winningRows[row][1]]) &&
		(board[winningRows[row][1]] == board[winningRows[row][2]])) {
			return board[winningRows[row][0]];
		}	
	}
	if (countChar(board, CHAR_EPMTY) == 0) {
		return TIE;
	}
		else return NOONE;
}

int countChar (char board[], char c) {
	int empty = 0;	
	for (int square = 0; square < NUM_SQUARES; ++square) {
		if (board[square] == c){
		empty++;
		}
	}	
	return empty;
}

bool isLegal(int move, char board[]) {
	return(board[move] == CHAR_EPMTY);
}

void announceWinner(char winner, char computer, char human) {
	if (winner == computer || winner == human) {
		cout << winner << "'s won!" << endl;		
	}
	else 
		cout << "It's a tie." << endl;
	
}
